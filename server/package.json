{
  "name": "gym-manager-server",
  "version": "1.0.0",
  "private": true,
  "description": "gym manager server",
  "main": "dist/server/src/app.js",
  "type": "module",
  "scripts": {
    "dev": "cross-env NODE_ENV=development tsx watch --require tsconfig-paths/register src/app.ts",
    "dev:staging": "cross-env NODE_ENV=staging tsx watch --require tsconfig-paths/register src/app.ts",
    "dev:prod": "cross-env NODE_ENV=production tsx watch --require tsconfig-paths/register src/app.ts",
    "dev:test": "cross-env NODE_ENV=test tsx watch --require tsconfig-paths/register src/app.ts",
    "build": "rimraf dist && tsc && tsc-alias && npm run sentry:sourcemaps",
    "start": "cross-env NODE_ENV=production node dist/server/src/app.js",
    "start:dev": "cross-env NODE_ENV=development node dist/server/src/app.js",
    "start:staging": "cross-env NODE_ENV=staging node dist/server/src/app.js",
    "start:test": "cross-env NODE_ENV=test node dist/server/src/app.js",
    "migrate:status": "node migrate-mongo-esm.js status",
    "migrate:up": "node migrate-mongo-esm.js up",
    "migrate:down": "node migrate-mongo-esm.js down",
    "migrate:create": "node migrate-mongo-esm.js create",
    "db:backup": "tsx scripts/backup.js",
    "db:restore": "tsx scripts/restore.js",
    "db:migrate-safe": "npm run db:backup && npm run migrate:up",
    "test": "cross-env NODE_ENV=test playwright test",
    "sentry:sourcemaps": "if [ -n \"$SENTRY_PROJECT\" ] && [ -n \"$SENTRY_ORG\" ] && [ -n \"$SENTRY_AUTH_TOKEN\" ]; then sentry-cli sourcemaps inject ./dist && sentry-cli sourcemaps upload ./dist; else echo 'Skipping Sentry sourcemap upload - missing configuration (SENTRY_PROJECT, SENTRY_ORG, SENTRY_AUTH_TOKEN)'; fi",
    "docker:build": "docker build -t gym-manager-server .",
    "docker:build:staging": "docker build -t gym-manager-server:staging --target production .",
    "docker:build:prod": "docker build -t gym-manager-server:production --target production .",
    "docker:test": "docker build -t gym-manager-server:test --target testing . && docker run --rm gym-manager-server:test",
    "docker:dev": "docker compose up --build",
    "docker:staging": "docker compose -f docker-compose.yml -f docker-compose.staging.yml up --build",
    "docker:prod": "docker compose -f docker-compose.yml -f docker-compose.production.yml up --build"
  },
  "author": "Hector",
  "license": "ISC",
  "dependencies": {
    "@sentry/cli": "^2.45.0",
    "@sentry/node": "^9.22.0",
    "@sentry/profiling-node": "^9.22.0",
    "axios": "^1.8.4",
    "bcryptjs": "^2.4.3",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "express-rate-limit": "^7.5.0",
    "firebase-admin": "^13.1.0",
    "google-auth-library": "^9.15.1",
    "i18n-iso-countries": "^7.14.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment-timezone": "^0.5.48",
    "mongoose": "^8.8.0",
    "mongoose-lean-virtuals": "^1.1.0",
    "multer": "^1.4.5-lts.1",
    "nanoid": "^5.0.9",
    "node-cron": "^3.0.3",
    "node-geocoder": "^4.4.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "resend": "^4.1.2",
    "sharp": "^0.33.5",
    "tz-lookup": "^6.1.25",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.52.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie-parser": "^1.4.7",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/lodash": "^4.17.16",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.11.24",
    "@types/node-cron": "^3.0.11",
    "@types/node-geocoder": "^4.2.6",
    "@types/passport": "^1.0.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/tz-lookup": "^6.1.2",
    "cross-env": "^7.0.3",
    "migrate-mongo": "^12.1.3",
    "playwright": "^1.52.0",
    "rimraf": "^5.0.5",
    "tsc-alias": "^1.8.8",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.7.1",
    "typescript": "^5.8.3"
  }
}
